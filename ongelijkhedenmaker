import copy

hoogte = 4
breedte = 4
hints = [[2,[3,1]],[0,[4,1]],[0,[2,4]]]
zwarte_velden = [[1,2],[4,3]]

vakjes = []
ong = []

for i in range(len(hints)):
    zwarte_velden.append(hints[i][1])

for i in range(1,breedte+1):
    temp = []
    for j in range(1,hoogte+1):
        temp.append([i,j])
    vakjes.append(temp)
        
for i in range(len(zwarte_velden)):
    for j in range(breedte):
        if zwarte_velden[i] in vakjes[j]:
            vakjes[j].pop(vakjes[j].index(zwarte_velden[i]))
   
def coeffhintmaker(omringer):
    for j in range(len(vakjes)):
        if omringer in vakjes[j]:
            lossemaxhint.append([omringer,1]) 
            lossenegmaxhint.append([omringer,-1])             
 
for i in range(len(hints)):
    lossemaxhint = []
    lossenegmaxhint = []
    
    hintboven = []
    hintboven.append(hints[i][1][0])
    hintboven.append(hints[i][1][1] +1)
    coeffhintmaker(hintboven)
    
    hintonder = []
    hintonder.append(hints[i][1][0]) 
    hintonder.append(hints[i][1][1] -1)
    coeffhintmaker(hintonder)
    
    hintlinks = []
    hintlinks.append(hints[i][1][0] -1)
    hintlinks.append(hints[i][1][1])
    coeffhintmaker(hintlinks)
    
    hintrechts = []
    hintrechts.append(hints[i][1][0] +1)
    hintrechts.append(hints[i][1][1])
    coeffhintmaker(hintrechts)
    
    lossemaxhint.sort()
    lossenegmaxhint.sort()
    
    lossemaxhint.append(hints[i][0])
    lossenegmaxhint.append(-1*hints[i][0])
    
    ong.append(lossemaxhint)
    ong.append(lossenegmaxhint) 

def Kolommen(x,y):
    kolom = [[x,y]]
    nog_niet_klaar = True
    i=1
    while nog_niet_klaar and y-i >0:
        if [x,y-i] in zwarte_velden:
            nog_niet_klaar = False
        else:
            kolom += [[x,y-i]]
            i += 1
    nog_niet_klaar = True
    i=1
    while nog_niet_klaar and y+i<= hoogte:
        if [x,y+i] in zwarte_velden:
            nog_niet_klaar = False
        else:
            kolom += [[x,y+i]]
            i += 1
    kolom.sort()
    return kolom

def Rijen(x,y):
    rij = [[x,y]]    
    nog_niet_klaar = True
    i=1
    while nog_niet_klaar and x-i>0:
        if [x-i,y] in zwarte_velden:
            nog_niet_klaar = False
        else:
            rij += [[x-i,y]]
            i += 1
    nog_niet_klaar = True
    i=1
    while nog_niet_klaar and x+i <= breedte:
        if [x+i,y] in zwarte_velden:
            nog_niet_klaar = False
        else:
            rij += [[x+i,y]]
            i += 1    
    rij.sort()
    return rij

def rijkolomaanongtoevoegen(a):
    b = []
    for i in range(len(a)):
        b.append([a[i],1])
    b.append(1)
    if b not in ong:
        ong.append(b)
        
def omgaanongtoevoegen(rij,kolom):
    omgpervakje = []
    for k in range(len(rij)):
        omgpervakje.append(rij[k])
    for k in range(len(kolom)):
        if kolom[k] not in omgpervakje:
            omgpervakje.append(kolom[k])
    omgpervakje.sort()
    for k in range(len(omgpervakje)):
        omgpervakje[k] = [omgpervakje[k],-1]
    omgpervakje.append(-1)
    if omgpervakje not in ong:    
        ong.append(omgpervakje)

for i in range(len(vakjes)):
    for j in range(len(vakjes[i])):
        rij = Rijen(vakjes[i][j][0], vakjes[i][j][1])
        kolom = Kolommen(vakjes[i][j][0], vakjes[i][j][1])
        omgaanongtoevoegen(rij,kolom)
        if len(rij)>1:
            rijkolomaanongtoevoegen(rij)
        if len(kolom)>1:
            rijkolomaanongtoevoegen(kolom)
        
print(ong)
