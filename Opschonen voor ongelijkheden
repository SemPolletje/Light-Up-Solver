#input
hoogte = 14
breedte = 14
hints = [[0,[1,11]], [0,[2,9]], [0,[4,10]], [0,[10,7]], [0,[12,5]], [0,[12,9]], [1,[3,6]], [1,[4,6]], [1,[5,3]], [1,[6,11]], [1,[9,4]], [1,[11,10]], [1,[13,2]], [1,[13,7]], [2,[2,2]], [2,[4,1]], [2,[4,5]], [2,[11,14]], [3,[4,3]], [3,[11,12]], [3,[14,4]]]
zwarte_velden = [[2,8], [2,13], [3,10], [3,11], [5,4], [5,8], [5,11], [6,2], [6,12], [7,2], [7,5], [7,7], [7,8], [8,7], [8,8], [8,10], [8,13], [9,3], [9,13], [10,4], [10,11], [10,12], [11,5], [11,9], [12,4], [13,6], [13,13]]

#lege lijsten die we later nodig hebben
vakjes = []
ong = []
antwoord = []
kruisjes = []
lampjes = []



#hieronder worden de hintvelden toegevoegd aan de zwarte velden.
for i in range(len(hints)):
    zwarte_velden.append(hints[i][1])


        
        



#hieronder wordt een bord gemaakt met alle vakjes.
for i in range(1,breedte+1):
    temp = []
    for j in range(1,hoogte+1):
        temp.append([i,j])
    vakjes += temp

#hieronder wordt gezorgd dat de zwarte velden uit het bord gehaald worden, 
#zodat je alleen de witte vakjes overhoudt, genaamd 'vakjes'.
for i in range(len(zwarte_velden)):
    vakjes.remove(zwarte_velden[i])

lege_vakjes = [] #we moeten ook bijhouden welke vakjes leeg zijn en welke nog niet beschenen zijn
for i in range(len(vakjes)):
    lege_vakjes.append(vakjes[i])
witte_vakjes = []
for i in range(len(vakjes)):
    witte_vakjes.append(vakjes[i])

def omhint(vakje): # deze functie geeft de lege vakjes om een hint
    omheen = []
    lijn = [0,0]
    if [vakje[0],vakje[1]+1] in lege_vakjes: #dit voegt het vakje erboven toe als die leeg is
        omheen += [[vakje[0],vakje[1]+1]]
        lijn[1] += 1
    if [vakje[0],vakje[1]-1] in lege_vakjes: #dit voegt het vakje eronder toe als die leeg is
        omheen += [[vakje[0],vakje[1]-1]]
        lijn[1] -= 1
    if [vakje[0]+1,vakje[1]] in lege_vakjes: #dit voegt het vakje rechts toe als die leeg is
        omheen += [[vakje[0]+1,vakje[1]]]
        lijn[0] += 1
    if [vakje[0]-1,vakje[1]] in lege_vakjes: #dit voegt het vakje links toe als die leeg  is
        omheen += [[vakje[0]-1,vakje[1]]]
        lijn[0] -= 1
    isnietlijn = True
    if lijn == [0,0]:  #dit is voor het geval dat bij een 1 hint de twee vrije vakjes tegenover elkaar staan, want dan kan je geen kruisjes zetten
        isnietlijn = False
    return [omheen,isnietlijn]

nognuttig = True


while nognuttig: #hiermee vullen we al een aantal kruisjes en lampjes in, zodat we later minder ongelijkheden hebben
    nognuttig = False
    verwijderen = [False]*len(hints)
    #we willen ook weten op welke vakjes de hints staan
    hintloc = []
    for i in range(len(hints)):
        hintloc.append(hints[i][1])
    for i in range(len(hints)):
        #print(lampjes)
        #print(hints)
        #print(kruisjes)
        hintvakje = hints[i][1]
        omvakjes = []
        
        for j in range(len(omhint(hintvakje)[0])):
            omvakjes.append(omhint(hintvakje)[0][j])
        if hints[i][0] == 0: #bij een 0 hint kunnen we er kruisjes omheenzetten
            for j in range(len(omvakjes)):
                if omvakjes[j] in kruisjes:
                    pass
                else:
                    kruisjes.append(omvakjes[j])
                    lege_vakjes.remove(omvakjes[j])
            verwijderen[i]=True
            nognuttig = True
        elif len(omvakjes) == hints[i][0]: #als het aantal vrije vakjes gelijk is aan de hint kunnen we op die vakjes lampjes zetten en daarna kruisjes zetten
            for j in range(len(omvakjes)):
                lampjes.append(omvakjes[j])
                lege_vakjes.remove(omvakjes[j]) 
                if [omvakjes[j][0]-1,omvakjes[j][1]] in hintloc and [omvakjes[j][0]-1,omvakjes[j][1]] != hints[i][1]:
                    hints[hintloc.index([omvakjes[j][0]-1,omvakjes[j][1]])][0] = hints[hintloc.index([omvakjes[j][0]-1,omvakjes[j][1]])][0] - 1
                if [omvakjes[j][0],omvakjes[j][1]-1] in hintloc and [omvakjes[j][0],omvakjes[j][1]-1] != hints[i][1]:
                    hints[hintloc.index([omvakjes[j][0],omvakjes[j][1]-1])][0] = hints[hintloc.index([omvakjes[j][0],omvakjes[j][1]-1])][0] - 1
                if [omvakjes[j][0]+1,omvakjes[j][1]] in hintloc and [omvakjes[j][0]+1,omvakjes[j][1]] != hints[i][1]:
                    hints[hintloc.index([omvakjes[j][0]+1,omvakjes[j][1]])][0] = hints[hintloc.index([omvakjes[j][0]+1,omvakjes[j][1]])][0] - 1
                if [omvakjes[j][0],omvakjes[j][1]+1] in hintloc and [omvakjes[j][0],omvakjes[j][1]+1] != hints[i][1]:
                    hints[hintloc.index([omvakjes[j][0],omvakjes[j][1]+1])][0] = hints[hintloc.index([omvakjes[j][0],omvakjes[j][1]+1])][0] - 1
                #hier zetten we de kruisjes in alle vier de richtingen
                r=omvakjes[j][0]
                k=omvakjes[j][1]
                nog_niet_klaar = True
                I=1
                while nog_niet_klaar: 
                    if [r,k-I] in vakjes:
                        if [r,k-I] in lege_vakjes:
                            lege_vakjes.remove([r,k-I])
                            witte_vakjes.remove([r,k-I])
                            kruisjes.append([r,k-I])
                        I += 1
                    else:
                        nog_niet_klaar = False
                nog_niet_klaar = True
                I=1
                while nog_niet_klaar:
                    if [r,k+I] in vakjes:
                        if [r,k+I] in lege_vakjes:
                            lege_vakjes.remove([r,k+I])
                            witte_vakjes.remove([r,k+I])
                            kruisjes.append([r,k+I])
                        I += 1
                    else:
                        nog_niet_klaar = False
                nog_niet_klaar = True
                I=1
                while nog_niet_klaar:
                    if [r-I,k] in vakjes:
                        if [r-I,k] in lege_vakjes:
                            lege_vakjes.remove([r-I,k])
                            witte_vakjes.remove([r-I,k])
                            kruisjes.append([r-I,k])
                        I += 1
                    else:
                        nog_niet_klaar = False
                nog_niet_klaar = True
                I=1
                while nog_niet_klaar:
                    if [r+I,k] in vakjes:
                        if [r+I,k] in lege_vakjes:
                            lege_vakjes.remove([r+I,k])
                            witte_vakjes.remove([r+I,k])
                            kruisjes.append([r+I,k])
                        I += 1
                    else:
                        nog_niet_klaar = False
                
            verwijderen[i] = True
            nognuttig = True
        elif len(omvakjes) == hints[i][0]+1: #in dit geval kunnen we kruisjes zetten op vakjes die een hoekpunt gemeen hebben met de hint
            
            if hints[i][0] == 3:
                if [hintvakje[0]-1,hintvakje[1]-1] in lege_vakjes:
                    kruisjes.append([hintvakje[0]-1,hintvakje[1]-1])
                    lege_vakjes.remove([hintvakje[0]-1,hintvakje[1]-1])
                    nognuttig = True
                if [hintvakje[0]-1,hintvakje[1]+1] in lege_vakjes:
                    kruisjes.append([hintvakje[0]-1,hintvakje[1]+1])
                    lege_vakjes.remove([hintvakje[0]-1,hintvakje[1]+1])
                    nognuttig = True
                if [hintvakje[0]+1,hintvakje[1]-1] in lege_vakjes:
                    kruisjes.append([hintvakje[0]+1,hintvakje[1]-1])
                    lege_vakjes.remove([hintvakje[0]+1,hintvakje[1]-1])
                    nognuttig = True
                if [hintvakje[0]+1,hintvakje[1]+1] in lege_vakjes:
                    kruisjes.append([hintvakje[0]+1,hintvakje[1]+1])
                    lege_vakjes.remove([hintvakje[0]+1,hintvakje[1]+1])
                    nognuttig = True
            if hints[i][0] == 2:
                if [hintvakje[0]-1,hintvakje[1]-1] in lege_vakjes and [hintvakje[0]-1,hintvakje[1]] in lege_vakjes and [hintvakje[0],hintvakje[1]-1] in lege_vakjes:
                    kruisjes.append([hintvakje[0]-1,hintvakje[1]-1])
                    lege_vakjes.remove([hintvakje[0]-1,hintvakje[1]-1])
                    nognuttig = True
                if [hintvakje[0]-1,hintvakje[1]+1] in lege_vakjes and [hintvakje[0]-1,hintvakje[1]] in lege_vakjes and [hintvakje[0],hintvakje[1]+1] in lege_vakjes:
                    kruisjes.append([hintvakje[0]-1,hintvakje[1]+1])
                    lege_vakjes.remove([hintvakje[0]-1,hintvakje[1]+1])
                    nognuttig = True
                if [hintvakje[0]+1,hintvakje[1]-1] in lege_vakjes and [hintvakje[0]+1,hintvakje[1]] in lege_vakjes and [hintvakje[0],hintvakje[1]-1] in lege_vakjes:
                    kruisjes.append([hintvakje[0]+1,hintvakje[1]-1])
                    lege_vakjes.remove([hintvakje[0]+1,hintvakje[1]-1])
                    nognuttig = True
                if [hintvakje[0]+1,hintvakje[1]+1] in lege_vakjes and [hintvakje[0]+1,hintvakje[1]] in lege_vakjes and [hintvakje[0],hintvakje[1]+1] in lege_vakjes:
                    kruisjes.append([hintvakje[0]+1,hintvakje[1]+1])
                    lege_vakjes.remove([hintvakje[0]+1,hintvakje[1]+1]) 
                    nognuttig = True
            if hints[i][0] == 1 and omhint(hintvakje)[1]: 
                if [omhint(hintvakje)[0][1][0],omhint(hintvakje)[0][0][1]] in lege_vakjes:
                    lege_vakjes.remove([omhint(hintvakje)[0][1][0],omhint(hintvakje)[0][0][1]])
                    kruisjes.append([omhint(hintvakje)[0][1][0],omhint(hintvakje)[0][0][1]])
                    nognuttig = True
    
    
    k=len(hints)
    for i in range(0,k): #de volledig ingevulde hints fungeren slechts als een zwart veld, dus die halen we weg uit de lijst met hints
        if verwijderen[k-i-1]:
            del hints[k-i-1]
    
